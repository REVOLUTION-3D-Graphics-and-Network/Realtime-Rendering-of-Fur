#version 430

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba16f, binding = 0) uniform readonly image2D img_last_pos; // Position in the last frame
layout(rgba16f, binding = 1) uniform readonly image2D img_current_pos; // Position in the current frame
layout(rgba16f, binding = 2) uniform writeonly image2D img_simulated_pos; // Position in the new frame (simulated)

// Do not forget to change this if it is changed in main.
// Casting a uniform to const did not seem to work..
const int noOfHairSegments = 4;

void main() {

    /***************************************************/
    /**************** Initialization *******************/
    /***************************************************/

    ivec2 texCoords[noOfHairSegments];
    vec4 last_pos[noOfHairSegments];
    vec4 curr_pos[noOfHairSegments];
    vec4 new_pos[noOfHairSegments];
    vec4 curr_vel[noOfHairSegments];

    // Initialize positions and velocities for each hair vertex.
    for(int i = 0; i < noOfHairSegments; i++){
        texCoords[i] = ivec2(gl_GlobalInvocationID.xy) + ivec2(i, 0);
        last_pos[i] = imageLoad(img_last_pos, texCoords[i]);
        curr_pos[i] = imageLoad(img_current_pos, texCoords[i]);

        new_pos[i] = vec4(0.f);
        curr_vel[i] = curr_pos[i] - last_pos[i];
    }

    /***************************************************/
    /*************** Simulation step *******************/
    /***************************************************/

    float dt = 0.01;

    /******************* Integration *******************/
    vec4 gravity = vec4(0.f, -9.82, 0.f, 0.f);
    for(int i = 0; i < noOfHairSegments; i++){
        new_pos[i] = curr_pos[i] + curr_vel[i] + gravity * pow(dt, 2);
    }

    /*************** Global constraints ****************/
    // TODO: Add global constraints

    /*************** Local constraints *****************/
    // TODO: Add local constraints

    /************ Edge/Length constraints **************/
    // TODO: Add edge/length constraints


    /***************************************************/
    /***************************************************/

    // Finally, set the new position in the correct texel in the output texture
    for(int i = 0; i < noOfHairSegments; i++){
        imageStore(img_simulated_pos, texCoords[i], new_pos[i]);
    }
}